{"version":3,"sources":["src/app/routes/passport/callback.component.ts","src/app/routes/passport/lock/lock.component.ts","src/app/routes/passport/lock/lock.component.html","src/app/routes/passport/login/login.component.ts","src/app/routes/passport/login/login.component.html","node_modules/@delon/util/fesm2022/form.mjs","src/app/routes/passport/register/register.component.ts","src/app/routes/passport/register/register.component.html","src/app/routes/passport/register-result/register-result.component.ts","src/app/routes/passport/register-result/register-result.component.html","src/app/routes/passport/routes.ts"],"sourcesContent":["import { Component, Input, OnInit, inject } from '@angular/core';\r\nimport { SocialService } from '@delon/auth';\r\nimport { SettingsService } from '@delon/theme';\r\n\r\n@Component({\r\n  selector: 'app-callback',\r\n  template: ``,\r\n  providers: [SocialService],\r\n  standalone: true\r\n})\r\nexport class CallbackComponent implements OnInit {\r\n  private readonly socialService = inject(SocialService);\r\n  private readonly settingsSrv = inject(SettingsService);\r\n  @Input() type = '';\r\n\r\n  ngOnInit(): void {\r\n    this.mockModel();\r\n  }\r\n\r\n  private mockModel(): void {\r\n    const info = {\r\n      token: '123456789',\r\n      name: 'cipchk',\r\n      email: `${this.type}@${this.type}.com`,\r\n      id: 10000,\r\n      time: +new Date()\r\n    };\r\n    this.settingsSrv.setUser({\r\n      ...this.settingsSrv.user,\r\n      ...info\r\n    });\r\n    this.socialService.callback(info);\r\n  }\r\n}\r\n","import { Component, inject } from '@angular/core';\r\nimport { FormControl, FormGroup, ReactiveFormsModule, Validators } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { DA_SERVICE_TOKEN } from '@delon/auth';\r\nimport { I18nPipe, SettingsService, User } from '@delon/theme';\r\nimport { NzAvatarModule } from 'ng-zorro-antd/avatar';\r\nimport { NzButtonModule } from 'ng-zorro-antd/button';\r\nimport { NzFormModule } from 'ng-zorro-antd/form';\r\nimport { NzGridModule } from 'ng-zorro-antd/grid';\r\nimport { NzInputModule } from 'ng-zorro-antd/input';\r\n\r\n@Component({\r\n  selector: 'passport-lock',\r\n  templateUrl: './lock.component.html',\r\n  styleUrls: ['./lock.component.less'],\r\n  standalone: true,\r\n  imports: [ReactiveFormsModule, I18nPipe, NzAvatarModule, NzFormModule, NzGridModule, NzButtonModule, NzInputModule]\r\n})\r\nexport class UserLockComponent {\r\n  private readonly tokenService = inject(DA_SERVICE_TOKEN);\r\n  private readonly settings = inject(SettingsService);\r\n  private readonly router = inject(Router);\r\n\r\n  f = new FormGroup({\r\n    password: new FormControl('', { nonNullable: true, validators: [Validators.required] })\r\n  });\r\n\r\n  get user(): User {\r\n    return this.settings.user;\r\n  }\r\n\r\n  submit(): void {\r\n    this.f.controls.password.markAsDirty();\r\n    this.f.controls.password.updateValueAndValidity();\r\n    if (this.f.valid) {\r\n      console.log('Valid!');\r\n      console.log(this.f.value);\r\n      this.tokenService.set({\r\n        token: '123'\r\n      });\r\n      this.router.navigate(['dashboard']);\r\n    }\r\n  }\r\n}\r\n","<div class=\"ant-card width-lg\" style=\"margin: 0 auto\">\r\n  <div class=\"ant-card-body\">\r\n    <div class=\"avatar\">\r\n      <nz-avatar [nzSrc]=\"user.avatar\" nzIcon=\"user\" nzSize=\"large\" />\r\n    </div>\r\n    <form nz-form [formGroup]=\"f\" (ngSubmit)=\"submit()\" role=\"form\" class=\"mt-md\">\r\n      <nz-form-item>\r\n        <nz-form-control [nzErrorTip]=\"'validation.password.required' | i18n\">\r\n          <nz-input-group nzSuffixIcon=\"lock\">\r\n            <input type=\"password\" nz-input formControlName=\"password\" />\r\n          </nz-input-group>\r\n        </nz-form-control>\r\n      </nz-form-item>\r\n      <div nz-row nzType=\"flex\" nzAlign=\"middle\">\r\n        <div nz-col [nzOffset]=\"12\" [nzSpan]=\"12\" style=\"text-align: right\">\r\n          <button nz-button [disabled]=\"!f.valid\" nzType=\"primary\">{{ 'app.lock' | i18n }}</button>\r\n        </div>\r\n      </div>\r\n    </form>\r\n  </div>\r\n</div>\r\n","import { HttpContext } from '@angular/common/http';\r\nimport { ChangeDetectionStrategy, ChangeDetectorRef, Component, OnDestroy, inject } from '@angular/core';\r\nimport { FormBuilder, ReactiveFormsModule, Validators } from '@angular/forms';\r\nimport { Router, RouterLink } from '@angular/router';\r\nimport { StartupService } from '@core';\r\nimport { ReuseTabService } from '@delon/abc/reuse-tab';\r\nimport { ALLOW_ANONYMOUS, DA_SERVICE_TOKEN, SocialOpenType, SocialService } from '@delon/auth';\r\nimport { I18nPipe, SettingsService, _HttpClient } from '@delon/theme';\r\nimport { environment } from '@env/environment';\r\nimport { NzAlertModule } from 'ng-zorro-antd/alert';\r\nimport { NzButtonModule } from 'ng-zorro-antd/button';\r\nimport { NzCheckboxModule } from 'ng-zorro-antd/checkbox';\r\nimport { NzFormModule } from 'ng-zorro-antd/form';\r\nimport { NzIconModule } from 'ng-zorro-antd/icon';\r\nimport { NzInputModule } from 'ng-zorro-antd/input';\r\nimport { NzTabChangeEvent, NzTabsModule } from 'ng-zorro-antd/tabs';\r\nimport { NzToolTipModule } from 'ng-zorro-antd/tooltip';\r\nimport { finalize } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'passport-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.less'],\r\n  providers: [SocialService],\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  standalone: true,\r\n  imports: [\r\n    RouterLink,\r\n    ReactiveFormsModule,\r\n    I18nPipe,\r\n    NzCheckboxModule,\r\n    NzTabsModule,\r\n    NzAlertModule,\r\n    NzFormModule,\r\n    NzInputModule,\r\n    NzButtonModule,\r\n    NzToolTipModule,\r\n    NzIconModule\r\n  ]\r\n})\r\nexport class UserLoginComponent implements OnDestroy {\r\n  private readonly router = inject(Router);\r\n  private readonly settingsService = inject(SettingsService);\r\n  private readonly socialService = inject(SocialService);\r\n  private readonly reuseTabService = inject(ReuseTabService, { optional: true });\r\n  private readonly tokenService = inject(DA_SERVICE_TOKEN);\r\n  private readonly startupSrv = inject(StartupService);\r\n  private readonly http = inject(_HttpClient);\r\n  private readonly cdr = inject(ChangeDetectorRef);\r\n\r\n  form = inject(FormBuilder).nonNullable.group({\r\n    userName: ['', [Validators.required, Validators.pattern(/^(admin|user)$/)]],\r\n    password: ['', [Validators.required, Validators.pattern(/^(admin|user)$/)]],\r\n    mobile: ['', [Validators.required, Validators.pattern(/^1\\d{10}$/)]],\r\n    captcha: ['', [Validators.required]],\r\n    remember: [true]\r\n  });\r\n  error = '';\r\n  type = 0;\r\n  loading = false;\r\n\r\n  count = 0;\r\n  interval$: any;\r\n\r\n  switch({ index }: NzTabChangeEvent): void {\r\n    this.type = index!;\r\n  }\r\n\r\n  getCaptcha(): void {\r\n    const mobile = this.form.controls.mobile;\r\n    if (mobile.invalid) {\r\n      mobile.markAsDirty({ onlySelf: true });\r\n      mobile.updateValueAndValidity({ onlySelf: true });\r\n      return;\r\n    }\r\n    this.count = 59;\r\n    this.interval$ = setInterval(() => {\r\n      this.count -= 1;\r\n      if (this.count <= 0) {\r\n        clearInterval(this.interval$);\r\n      }\r\n    }, 1000);\r\n  }\r\n\r\n  submit(): void {\r\n    this.error = '';\r\n    if (this.type === 0) {\r\n      const { userName, password } = this.form.controls;\r\n      userName.markAsDirty();\r\n      userName.updateValueAndValidity();\r\n      password.markAsDirty();\r\n      password.updateValueAndValidity();\r\n      if (userName.invalid || password.invalid) {\r\n        return;\r\n      }\r\n    } else {\r\n      const { mobile, captcha } = this.form.controls;\r\n      mobile.markAsDirty();\r\n      mobile.updateValueAndValidity();\r\n      captcha.markAsDirty();\r\n      captcha.updateValueAndValidity();\r\n      if (mobile.invalid || captcha.invalid) {\r\n        return;\r\n      }\r\n    }\r\n\r\n    this.loading = true;\r\n    this.cdr.detectChanges();\r\n    this.tokenService.set({ token: '123', expired: new Date().getMilliseconds() * 10000 });\r\n    this.startupSrv.load().subscribe(() => {\r\n      let url = this.tokenService.referrer!.url || '/';\r\n      if (url.includes('/passport')) {\r\n        url = '/';\r\n      }\r\n      this.router.navigateByUrl(url);\r\n    });\r\n  }\r\n\r\n  open(type: string, openType: SocialOpenType = 'href'): void {\r\n    let url = ``;\r\n    let callback = ``;\r\n    if (environment.production) {\r\n      callback = `https://ng-alain.github.io/ng-alain/#/passport/callback/${type}`;\r\n    } else {\r\n      callback = `http://localhost:4200/#/passport/callback/${type}`;\r\n    }\r\n    switch (type) {\r\n      case 'auth0':\r\n        url = `//cipchk.auth0.com/login?client=8gcNydIDzGBYxzqV0Vm1CX_RXH-wsWo5&redirect_uri=${decodeURIComponent(callback)}`;\r\n        break;\r\n      case 'github':\r\n        url = `//github.com/login/oauth/authorize?client_id=9d6baae4b04a23fcafa2&response_type=code&redirect_uri=${decodeURIComponent(\r\n          callback\r\n        )}`;\r\n        break;\r\n      case 'weibo':\r\n        url = `https://api.weibo.com/oauth2/authorize?client_id=1239507802&response_type=code&redirect_uri=${decodeURIComponent(callback)}`;\r\n        break;\r\n    }\r\n    if (openType === 'window') {\r\n      this.socialService\r\n        .login(url, '/', {\r\n          type: 'window'\r\n        })\r\n        .subscribe(res => {\r\n          if (res) {\r\n            this.settingsService.setUser(res);\r\n            this.router.navigateByUrl('/');\r\n          }\r\n        });\r\n    } else {\r\n      this.socialService.login(url, '/', {\r\n        type: 'href'\r\n      });\r\n    }\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    if (this.interval$) {\r\n      clearInterval(this.interval$);\r\n    }\r\n  }\r\n}\r\n","<form nz-form [formGroup]=\"form\" (ngSubmit)=\"submit()\" role=\"form\">\r\n  <nz-tabset [nzAnimated]=\"false\" class=\"tabs\" (nzSelectChange)=\"switch($event)\">\r\n    <nz-tab [nzTitle]=\"'app.login.tab-login-credentials' | i18n\">\r\n      @if (error) {\r\n        <nz-alert [nzType]=\"'error'\" [nzMessage]=\"error\" [nzShowIcon]=\"true\" class=\"mb-lg\" />\r\n      }\r\n      <nz-form-item>\r\n        <nz-form-control nzErrorTip=\"Please enter mobile number, muse be: admin or user\">\r\n          <nz-input-group nzSize=\"large\" nzPrefixIcon=\"user\">\r\n            <input nz-input formControlName=\"userName\" placeholder=\"username: admin or user\" />\r\n          </nz-input-group>\r\n        </nz-form-control>\r\n      </nz-form-item>\r\n      <nz-form-item>\r\n        <nz-form-control nzErrorTip=\"Please enter password, muse be: ng-alain.com\">\r\n          <nz-input-group nzSize=\"large\" nzPrefixIcon=\"lock\">\r\n            <input nz-input type=\"password\" formControlName=\"password\" placeholder=\"password: admin or user\" />\r\n          </nz-input-group>\r\n        </nz-form-control>\r\n      </nz-form-item>\r\n    </nz-tab>\r\n    <nz-tab [nzTitle]=\"'app.login.tab-login-mobile' | i18n\">\r\n      <nz-form-item>\r\n        <nz-form-control [nzErrorTip]=\"mobileErrorTip\">\r\n          <nz-input-group nzSize=\"large\" nzPrefixIcon=\"user\">\r\n            <input nz-input formControlName=\"mobile\" placeholder=\"mobile number\" />\r\n          </nz-input-group>\r\n          <ng-template #mobileErrorTip let-i>\r\n            @if (i.errors.required) {\r\n              {{ 'validation.phone-number.required' | i18n }}\r\n            }\r\n            @if (i.errors.pattern) {\r\n              {{ 'validation.phone-number.wrong-format' | i18n }}\r\n            }\r\n          </ng-template>\r\n        </nz-form-control>\r\n      </nz-form-item>\r\n      <nz-form-item>\r\n        <nz-form-control [nzErrorTip]=\"'validation.verification-code.required' | i18n\">\r\n          <nz-row [nzGutter]=\"8\">\r\n            <nz-col [nzSpan]=\"16\">\r\n              <nz-input-group nzSize=\"large\" nzPrefixIcon=\"mail\">\r\n                <input nz-input formControlName=\"captcha\" placeholder=\"captcha\" />\r\n              </nz-input-group>\r\n            </nz-col>\r\n            <nz-col [nzSpan]=\"8\">\r\n              <button type=\"button\" nz-button nzSize=\"large\" (click)=\"getCaptcha()\" [disabled]=\"count >= 0\" nzBlock [nzLoading]=\"loading\">\r\n                {{ count ? count + 's' : ('app.register.get-verification-code' | i18n) }}\r\n              </button>\r\n            </nz-col>\r\n          </nz-row>\r\n        </nz-form-control>\r\n      </nz-form-item>\r\n    </nz-tab>\r\n  </nz-tabset>\r\n  <nz-form-item>\r\n    <nz-col [nzSpan]=\"12\">\r\n      <label nz-checkbox formControlName=\"remember\">{{ 'app.login.remember-me' | i18n }}</label>\r\n    </nz-col>\r\n    <nz-col [nzSpan]=\"12\" class=\"text-right\">\r\n      <a class=\"forgot\" routerLink=\"/passport/register\">{{ 'app.login.forgot-password' | i18n }}</a>\r\n    </nz-col>\r\n  </nz-form-item>\r\n  <nz-form-item>\r\n    <button nz-button type=\"submit\" nzType=\"primary\" nzSize=\"large\" [nzLoading]=\"loading\" nzBlock>\r\n      {{ 'app.login.login' | i18n }}\r\n    </button>\r\n  </nz-form-item>\r\n</form>\r\n<!-- <div class=\"other\">\r\n  {{ 'app.login.sign-in-with' | i18n }}\r\n  <i nz-tooltip nzTooltipTitle=\"in fact Auth0 via window\" (click)=\"open('auth0', 'window')\" nz-icon nzType=\"alipay-circle\" class=\"icon\"></i>\r\n  <i nz-tooltip nzTooltipTitle=\"in fact Github via redirect\" (click)=\"open('github')\" nz-icon nzType=\"taobao-circle\" class=\"icon\"></i>\r\n  <i (click)=\"open('weibo', 'window')\" nz-icon nzType=\"weibo-circle\" class=\"icon\"></i>\r\n  <a class=\"register\" routerLink=\"/passport/register\">{{ 'app.login.signup' | i18n }}</a>\r\n</div> -->\r\n","import { isNum, isInt, isDecimal, isIdCard, isMobile, isUrl, isIp, isColor, isChinese } from '@delon/util/format';\n\n/**\n * A set of validators for reactive forms\n *\n * 一套用于响应式表单的验证器\n */\nclass _Validators {\n    /**\n     * Wheter is number\n     *\n     * 是否为数字\n     */\n    static num(control) {\n        return isNum(control.value) ? null : { num: true };\n    }\n    /**\n     * Wheter is integer\n     *\n     * 是否为整数\n     */\n    static int(control) {\n        return isInt(control.value) ? null : { int: true };\n    }\n    /**\n     * Wheter is decimal\n     *\n     * 是否为小数点数值\n     */\n    static decimal(control) {\n        return isDecimal(control.value) ? null : { decimal: true };\n    }\n    /**\n     * Wheter is People's Republic of China identity card\n     *\n     * 是否为中华人民共和国居民身份证\n     */\n    static idCard(control) {\n        return isIdCard(control.value) ? null : { idCard: true };\n    }\n    /**\n     * Wheter is china mobile (China)\n     *\n     * 是否为手机号（中国）\n     */\n    static mobile(control) {\n        return isMobile(control.value) ? null : { mobile: true };\n    }\n    /**\n     * Wheter is url address\n     *\n     * 是否URL地址\n     */\n    static url(control) {\n        return isUrl(control.value) ? null : { url: true };\n    }\n    /**\n     * Wheter is IPv4 address (Support v4, v6)\n     *\n     * 是否IP4地址（支持v4、v6）\n     */\n    static ip(control) {\n        return isIp(control.value) ? null : { ip: true };\n    }\n    /**\n     * Wheter is color\n     *\n     * 是否颜色代码值\n     */\n    static color(control) {\n        return isColor(control.value) ? null : { color: true };\n    }\n    /**\n     * Wheter is chinese\n     *\n     * 是否中文\n     */\n    static chinese(control) {\n        return isChinese(control.value) ? null : { chinese: true };\n    }\n}\n\n/**\n * Match two control values\n *\n * 匹配两个控件值\n * ```ts\n * this.form = new FormGroup({\n *  pwd: new FormControl(''),\n *  repwd: new FormControl(''),\n * }, {\n *  validators: MatchControl('pwd', 'repwd'),\n * });\n * ```\n */\nfunction MatchControl(controlName, matchingControlName) {\n    return (formGroup) => {\n        const control = formGroup.get(controlName);\n        const matchingControl = formGroup.get(matchingControlName);\n        if (matchingControl.errors && !matchingControl.errors.matchControl) {\n            return null;\n        }\n        if (control.value !== matchingControl.value) {\n            matchingControl.setErrors({ matchControl: true });\n        }\n        else {\n            matchingControl.setErrors(null);\n        }\n        return null;\n    };\n}\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MatchControl, _Validators };\n\n","import { HttpContext } from '@angular/common/http';\r\nimport { ChangeDetectionStrategy, ChangeDetectorRef, Component, OnDestroy, inject } from '@angular/core';\r\nimport { AbstractControl, FormBuilder, FormControl, ReactiveFormsModule, Validators } from '@angular/forms';\r\nimport { Router, RouterLink } from '@angular/router';\r\nimport { ALLOW_ANONYMOUS } from '@delon/auth';\r\nimport { I18nPipe, _HttpClient } from '@delon/theme';\r\nimport { MatchControl } from '@delon/util/form';\r\nimport { NzAlertModule } from 'ng-zorro-antd/alert';\r\nimport { NzButtonModule } from 'ng-zorro-antd/button';\r\nimport { NzSafeAny } from 'ng-zorro-antd/core/types';\r\nimport { NzFormModule } from 'ng-zorro-antd/form';\r\nimport { NzGridModule } from 'ng-zorro-antd/grid';\r\nimport { NzInputModule } from 'ng-zorro-antd/input';\r\nimport { NzPopoverModule } from 'ng-zorro-antd/popover';\r\nimport { NzProgressModule } from 'ng-zorro-antd/progress';\r\nimport { NzSelectModule } from 'ng-zorro-antd/select';\r\nimport { finalize } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'passport-register',\r\n  templateUrl: './register.component.html',\r\n  styleUrls: ['./register.component.less'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  standalone: true,\r\n  imports: [\r\n    ReactiveFormsModule,\r\n    I18nPipe,\r\n    RouterLink,\r\n    NzAlertModule,\r\n    NzFormModule,\r\n    NzInputModule,\r\n    NzPopoverModule,\r\n    NzProgressModule,\r\n    NzSelectModule,\r\n    NzGridModule,\r\n    NzButtonModule\r\n  ]\r\n})\r\nexport class UserRegisterComponent implements OnDestroy {\r\n  private readonly router = inject(Router);\r\n  private readonly http = inject(_HttpClient);\r\n  private readonly cdr = inject(ChangeDetectorRef);\r\n\r\n  // #region fields\r\n\r\n  form = inject(FormBuilder).nonNullable.group(\r\n    {\r\n      mail: ['', [Validators.required, Validators.email]],\r\n      password: ['', [Validators.required, Validators.minLength(6), UserRegisterComponent.checkPassword.bind(this)]],\r\n      confirm: ['', [Validators.required, Validators.minLength(6)]],\r\n      mobilePrefix: ['+86'],\r\n      mobile: ['', [Validators.required, Validators.pattern(/^1\\d{10}$/)]],\r\n      captcha: ['', [Validators.required]]\r\n    },\r\n    {\r\n      validators: MatchControl('password', 'confirm')\r\n    }\r\n  );\r\n  error = '';\r\n  type = 0;\r\n  loading = false;\r\n  visible = false;\r\n  status = 'pool';\r\n  progress = 0;\r\n  passwordProgressMap: { [key: string]: 'success' | 'normal' | 'exception' } = {\r\n    ok: 'success',\r\n    pass: 'normal',\r\n    pool: 'exception'\r\n  };\r\n\r\n  // #endregion\r\n\r\n  // #region get captcha\r\n\r\n  count = 0;\r\n  interval$: NzSafeAny;\r\n\r\n  static checkPassword(control: FormControl): NzSafeAny {\r\n    if (!control) {\r\n      return null;\r\n    }\r\n    // eslint-disable-next-line @typescript-eslint/no-this-alias\r\n    const self: NzSafeAny = this;\r\n    self.visible = !!control.value;\r\n    if (control.value && control.value.length > 9) {\r\n      self.status = 'ok';\r\n    } else if (control.value && control.value.length > 5) {\r\n      self.status = 'pass';\r\n    } else {\r\n      self.status = 'pool';\r\n    }\r\n\r\n    if (self.visible) {\r\n      self.progress = control.value.length * 10 > 100 ? 100 : control.value.length * 10;\r\n    }\r\n  }\r\n\r\n  getCaptcha(): void {\r\n    const { mobile } = this.form.controls;\r\n    if (mobile.invalid) {\r\n      mobile.markAsDirty({ onlySelf: true });\r\n      mobile.updateValueAndValidity({ onlySelf: true });\r\n      return;\r\n    }\r\n    this.count = 59;\r\n    this.cdr.detectChanges();\r\n    this.interval$ = setInterval(() => {\r\n      this.count -= 1;\r\n      this.cdr.detectChanges();\r\n      if (this.count <= 0) {\r\n        clearInterval(this.interval$);\r\n      }\r\n    }, 1000);\r\n  }\r\n\r\n  // #endregion\r\n\r\n  submit(): void {\r\n    this.error = '';\r\n    Object.keys(this.form.controls).forEach(key => {\r\n      const control = (this.form.controls as NzSafeAny)[key] as AbstractControl;\r\n      control.markAsDirty();\r\n      control.updateValueAndValidity();\r\n    });\r\n    if (this.form.invalid) {\r\n      return;\r\n    }\r\n\r\n    const data = this.form.value;\r\n    this.loading = true;\r\n    this.cdr.detectChanges();\r\n    this.http\r\n      .post('/register', data, null, {\r\n        context: new HttpContext().set(ALLOW_ANONYMOUS, true)\r\n      })\r\n      .pipe(\r\n        finalize(() => {\r\n          this.loading = false;\r\n          this.cdr.detectChanges();\r\n        })\r\n      )\r\n      .subscribe(() => {\r\n        this.router.navigate(['passport', 'register-result'], { queryParams: { email: data.mail } });\r\n      });\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    if (this.interval$) {\r\n      clearInterval(this.interval$);\r\n    }\r\n  }\r\n}\r\n","<h3>{{ 'app.register.register' | i18n }}</h3>\r\n<form nz-form [formGroup]=\"form\" (ngSubmit)=\"submit()\" role=\"form\">\r\n  @if (error) {\r\n    <nz-alert [nzType]=\"'error'\" [nzMessage]=\"error\" [nzShowIcon]=\"true\" class=\"mb-lg\" />\r\n  }\r\n  <nz-form-item>\r\n    <nz-form-control [nzErrorTip]=\"mailErrorTip\">\r\n      <nz-input-group nzSize=\"large\" nzAddonBeforeIcon=\"user\">\r\n        <input nz-input formControlName=\"mail\" placeholder=\"Email\" />\r\n      </nz-input-group>\r\n      <ng-template #mailErrorTip let-i>\r\n        @if (i.errors?.required) {\r\n          {{ 'validation.email.required' | i18n }}\r\n        }\r\n        @if (i.errors?.email) {\r\n          {{ 'validation.email.wrong-format' | i18n }}\r\n        }\r\n      </ng-template>\r\n    </nz-form-control>\r\n  </nz-form-item>\r\n  <nz-form-item>\r\n    <nz-form-control [nzErrorTip]=\"'validation.password.required' | i18n\">\r\n      <nz-input-group\r\n        nzSize=\"large\"\r\n        nzAddonBeforeIcon=\"lock\"\r\n        nz-popover\r\n        nzPopoverPlacement=\"right\"\r\n        nzPopoverTrigger=\"focus\"\r\n        [(nzPopoverVisible)]=\"visible\"\r\n        nzPopoverOverlayClassName=\"register-password-cdk\"\r\n        [nzPopoverOverlayStyle]=\"{ 'width.px': 240 }\"\r\n        [nzPopoverContent]=\"pwdCdkTpl\"\r\n      >\r\n        <input nz-input type=\"password\" formControlName=\"password\" placeholder=\"Password\" />\r\n      </nz-input-group>\r\n      <ng-template #pwdCdkTpl>\r\n        <div style=\"padding: 4px 0\">\r\n          @switch (status) {\r\n            @case ('ok') {\r\n              <div class=\"success\">{{ 'validation.password.strength.strong' | i18n }}</div>\r\n            }\r\n            @case ('pass') {\r\n              <div class=\"warning\">{{ 'validation.password.strength.medium' | i18n }}</div>\r\n            }\r\n            @default {\r\n              <div class=\"error\">{{ 'validation.password.strength.short' | i18n }}</div>\r\n            }\r\n          }\r\n          <div class=\"progress-{{ status }}\">\r\n            <nz-progress [nzPercent]=\"progress\" [nzStatus]=\"passwordProgressMap[status]\" [nzStrokeWidth]=\"6\" [nzShowInfo]=\"false\" />\r\n          </div>\r\n          <p class=\"mt-sm\">{{ 'validation.password.strength.msg' | i18n }}</p>\r\n        </div>\r\n      </ng-template>\r\n    </nz-form-control>\r\n  </nz-form-item>\r\n  <nz-form-item>\r\n    <nz-form-control [nzErrorTip]=\"confirmErrorTip\">\r\n      <nz-input-group nzSize=\"large\" nzAddonBeforeIcon=\"lock\">\r\n        <input nz-input type=\"password\" formControlName=\"confirm\" placeholder=\"Confirm Password\" />\r\n      </nz-input-group>\r\n      <ng-template #confirmErrorTip let-i>\r\n        @if (i.errors?.required) {\r\n          {{ 'validation.confirm-password.required' | i18n }}\r\n        }\r\n        @if (i.errors?.matchControl) {\r\n          {{ 'validation.password.twice' | i18n }}\r\n        }\r\n      </ng-template>\r\n    </nz-form-control>\r\n  </nz-form-item>\r\n  <nz-form-item>\r\n    <nz-form-control [nzErrorTip]=\"mobileErrorTip\">\r\n      <nz-input-group nzSize=\"large\" [nzAddOnBefore]=\"addOnBeforeTemplate\">\r\n        <ng-template #addOnBeforeTemplate>\r\n          <nz-select formControlName=\"mobilePrefix\" style=\"width: 100px\">\r\n            <nz-option [nzLabel]=\"'+86'\" [nzValue]=\"'+86'\" />\r\n            <nz-option [nzLabel]=\"'+87'\" [nzValue]=\"'+87'\" />\r\n          </nz-select>\r\n        </ng-template>\r\n        <input formControlName=\"mobile\" nz-input placeholder=\"Phone number\" />\r\n      </nz-input-group>\r\n      <ng-template #mobileErrorTip let-i>\r\n        @if (i.errors?.required) {\r\n          {{ 'validation.phone-number.required' | i18n }}\r\n        }\r\n        @if (i.errors?.pattern) {\r\n          {{ 'validation.phone-number.wrong-format' | i18n }}\r\n        }\r\n      </ng-template>\r\n    </nz-form-control>\r\n  </nz-form-item>\r\n  <nz-form-item>\r\n    <nz-form-control [nzErrorTip]=\"'validation.verification-code.required' | i18n\">\r\n      <div nz-row [nzGutter]=\"8\">\r\n        <div nz-col [nzSpan]=\"16\">\r\n          <nz-input-group nzSize=\"large\" nzAddonBeforeIcon=\"mail\">\r\n            <input nz-input formControlName=\"captcha\" placeholder=\"Captcha\" />\r\n          </nz-input-group>\r\n        </div>\r\n        <div nz-col [nzSpan]=\"8\">\r\n          <button type=\"button\" nz-button nzSize=\"large\" (click)=\"getCaptcha()\" [disabled]=\"count > 0\" nzBlock [nzLoading]=\"loading\">\r\n            {{ count ? count + 's' : ('app.register.get-verification-code' | i18n) }}\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </nz-form-control>\r\n  </nz-form-item>\r\n  <nz-form-item>\r\n    <button nz-button nzType=\"primary\" nzSize=\"large\" type=\"submit\" [nzLoading]=\"loading\" class=\"submit\">\r\n      {{ 'app.register.register' | i18n }}\r\n    </button>\r\n    <a class=\"login\" routerLink=\"/passport/login\">{{ 'app.register.sign-in' | i18n }}</a>\r\n  </nz-form-item>\r\n</form>\r\n","import { Component, Input, inject } from '@angular/core';\r\nimport { RouterLink } from '@angular/router';\r\nimport { ResultModule } from '@delon/abc/result';\r\nimport { I18nPipe } from '@delon/theme';\r\nimport { NzButtonModule } from 'ng-zorro-antd/button';\r\nimport { NzMessageService } from 'ng-zorro-antd/message';\r\n\r\n@Component({\r\n  selector: 'passport-register-result',\r\n  templateUrl: './register-result.component.html',\r\n  standalone: true,\r\n  imports: [RouterLink, I18nPipe, NzButtonModule, ResultModule]\r\n})\r\nexport class UserRegisterResultComponent {\r\n  readonly msg = inject(NzMessageService);\r\n  @Input() email = '';\r\n}\r\n","<result type=\"success\" [title]=\"title\" description=\"{{ 'app.register-result.activation-email' | i18n }}\">\r\n  <ng-template #title>\r\n    <div class=\"title\" style=\"font-size: 20px\">\r\n      {{ 'app.register-result.msg' | i18n: { email } }}\r\n    </div>\r\n  </ng-template>\r\n  <button (click)=\"msg.success('email')\" nz-button nzSize=\"large\" [nzType]=\"'primary'\">\r\n    {{ 'app.register-result.view-mailbox' | i18n }}\r\n  </button>\r\n  <button routerLink=\"/\" nz-button nzSize=\"large\">\r\n    {{ 'app.register-result.back-home' | i18n }}\r\n  </button>\r\n</result>\r\n","import { Routes } from '@angular/router';\r\n\r\nimport { CallbackComponent } from './callback.component';\r\nimport { UserLockComponent } from './lock/lock.component';\r\nimport { UserLoginComponent } from './login/login.component';\r\nimport { UserRegisterComponent } from './register/register.component';\r\nimport { UserRegisterResultComponent } from './register-result/register-result.component';\r\nimport { LayoutPassportComponent } from '../../layout';\r\n\r\nexport const routes: Routes = [\r\n  // passport\r\n  {\r\n    path: 'passport',\r\n    component: LayoutPassportComponent,\r\n    children: [\r\n      {\r\n        path: 'login',\r\n        component: UserLoginComponent,\r\n        data: { title: '登录', titleI18n: 'app.login.login' }\r\n      },\r\n      {\r\n        path: 'register',\r\n        component: UserRegisterComponent,\r\n        data: { title: '注册', titleI18n: 'app.register.register' }\r\n      },\r\n      {\r\n        path: 'register-result',\r\n        component: UserRegisterResultComponent,\r\n        data: { title: '注册结果', titleI18n: 'app.register.register' }\r\n      },\r\n      {\r\n        path: 'lock',\r\n        component: UserLockComponent,\r\n        data: { title: '锁屏', titleI18n: 'app.lock' }\r\n      }\r\n    ]\r\n  },\r\n  // 单页不包裹Layout\r\n  { path: 'passport/callback/:type', component: CallbackComponent }\r\n];\r\n"],"mappings":"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","names":["_c0"],"x_google_ignoreList":[5]}